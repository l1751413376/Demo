<Window x:Class="Beta.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Beta"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800">
    <Window.Resources>
        <!--FIcon-->
        <Style x:Key="FIcon2" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="./Resources/#fontawesome-webfont"></Setter>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30"/>
        </Style>
        <!--FButton模板-->
        <ControlTemplate x:Key="FButton_Template" TargetType="{x:Type local:FButton}">
            <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" 
                                    Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
                <!--Icon/Text-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <TextBlock x:Name="icon"  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FIconMargin}" 
                           RenderTransformOrigin="0.5,0.5" Style="{StaticResource FIcon2}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIcon}" 
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIconSize}" 
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="transIcon" Angle="0"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <TextBlock VerticalAlignment="Center"  x:Name="txt" 
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}" 
                                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                                               FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                                               Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"></TextBlock>
                </StackPanel>
            </Border>
            <!--触发器-->
            <ControlTemplate.Triggers>
                <!--设置鼠标进入时的背景、前景样式-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverBackground}" TargetName="border" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="icon"/>
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="txt"/>
                </Trigger>
                <!--Ficon的动画触发器 翻转-->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"></Condition>
                        <Condition Property="AllowsAnimation" Value="true"></Condition>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <!--鼠标按下时的前景、背景样式-->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedBackground}" TargetName="border" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="icon"/>
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="txt"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.5" TargetName="border"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type local:FButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="MouseOverBackground" Value="Transparent" />
            <Setter Property="MouseOverForeground" Value="YellowGreen" />
            <Setter Property="PressedBackground" Value="Transparent" />
            <Setter Property="PressedForeground" Value="YellowGreen" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="FIconSize" Value="22" />
            <Setter Property="Template" Value="{StaticResource FButton_Template}"/>
            <Setter Property="Padding" Value="3,1,3,1" />
            <Setter Property="Content" Value="{x:Null}" />
            <Setter Property="FIconMargin" Value="0,0,5,0" />
            <Setter Property="AllowsAnimation" Value="False" />
        </Style>
    </Window.Resources>
    <Grid>
        <Image Height="512" Width="512" x:Name="bgMap"></Image>
        <Canvas></Canvas>
        <StackPanel Orientation="Horizontal">
            <local:FButton FIcon="A" Margin="3"  AllowsAnimation="True">系统换转</local:FButton>
        </StackPanel>
    </Grid>
</Window>
